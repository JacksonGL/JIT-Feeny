defn stack (max_size) :
    object :
        var arr = array(max_size, -1)
        var size = 0
        method pop () :
            this.size = this.size - 1
            this.arr[this.size]
        method push (v) :
            this.arr[this.size] = v
            this.size = this.size + 1
        method empty () :
            this.size == 0
        method peek () :
            this.arr[this.size - 1]

; -------------------
; START my testing code
defn _test (i, s):
    if i >= 0 :
        s.push(i)
        if _test(i - 1, s) : i == s.pop()
        else : null
    else :
        1

defn test (i):
    if _test(i - 1, stack(i)) :
        1
    else :
        printf("Failed!\n")
; END my testing code
; -------------------

var s = stack(10)

; Push items
var i = 0
while i < 10 :
    s.push(i * 10)
    i = i + 1

; Pop items
while s.size > 0 :
    printf("About to pop: ~\n", s.peek())
    printf("Popped: ~\n", s.pop())
