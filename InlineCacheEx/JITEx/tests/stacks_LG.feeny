defn Stack (n) :
    object : 
        var capacity = n
        var elems = array(n, 0)
        var currIndex = 0
        method push (elem) :
            if this.currIndex < this.capacity :
                this.elems[this.currIndex] = elem
                this.currIndex = this.currIndex + 1
        method peek () :
            if this.capacity > 0 :
                if this.currIndex > 0 :
                    this.elems[this.currIndex - 1]
        method pop () :
            if this.capacity > 0 :
                if this.currIndex > 0 :
                    this.currIndex = this.currIndex - 1
                    this.elems[this.currIndex]
        method size () :
            this.currIndex

; test code
var s = Stack(10)

; Push items
var i = 0
while i < 10 :
    s.push(i * 10)
    i = i + 1

; Pop items
while s.size() > 0 :
    printf("About to pop: ~\n", s.peek())
    printf("Popped: ~\n", s.pop())

